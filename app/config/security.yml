parameters:
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap

security:
    providers:
        fos_userbundle:
            id: fos_user.user_manager

    encoders:
        "Application\Sonata\UserBundle\Entity\User":
            algorithm: sha512
            encode_as_base64: false
            iterations: 1

        "Symfony\Component\Security\Core\User\User": plaintext

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        secured_area:
            pattern: (^/admin(.*)|^/profile(.*))
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                use_referer:    true
                default_target_path:            /admin/dashboard
                
                use_referer:                    true

                # failure_path:                   null
                # failure_forward:                false

                # username_parameter:             _username
                # password_parameter:             _password

                # csrf_parameter:                 _csrf_token
                # intention:                      authenticate
            logout:
                path:           /admin/logout
                target:         /admin/login

            anonymous:    true
        public:
            # since anonymous is allowed users will not be forced to login
            pattern:   .*   
            security: false




    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/_wdt, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_profiler, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # -> custom access control for the admin area of the URL
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # -> end


        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin, role: [ROLE_ADMIN] }
        # - { path: ^/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        # - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }


    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        # SONATA:
            # - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented
            # - ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT
            #


    acl:
        connection: default

